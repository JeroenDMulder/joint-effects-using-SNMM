[
  {
    "objectID": "empirical-example.html",
    "href": "empirical-example.html",
    "title": "Empirical example",
    "section": "",
    "text": "Below you can find annotated R code for reading in and preparing the data, and for fitting cross-lagged panel models (CLPM) in the structural equation modeling (SEM) framework, fitting repeated multiple regression models, and fitting structural nested mean models (SNMM) using the G-estimation procedure of Vansteelandt and Sjolander (2016).\n\nPreparing the data\nThe data come from the Longitudinal Internet studies for the Social Sciences (LISS), and specifically from the “Health”, “INCOME”, “Personality”, and “Social Integration and Leisure” LISS core studies (i.e., questionnaires). To gain access to the data, please see https://www.lissdata.nl/ (Scherpenzeel 2018).\nFirst, the different LISS questionnaires were read into R and merged together based on participant ID, nomem_encr. The variables of interest were selected and renamed.\n\ndf_LISS_raw &lt;- map(\n  .x = c(\n    \"./data/cs08a_2p_EN.sav\", \"./data/cs09b_1p_EN.sav\", \n    \"./data/cs10c_1p_EN.sav\", \"./data/cs11d_EN_3.0p.sav\", \n    \"./data/cs12e_1.0p_EN.sav\", \"./data/cs13f_2.0p_EN.sav\", \n    \"./data/cs14g_EN_2.0.sav\", \"./data/cs15h_EN_1.0p.sav\",\n    \"./data/cs16i_EN_1.0p.sav\", \"./data/cs17j_EN_1.0p.sav\", \n    \"./data/cs18k_EN_1.0p.sav\", \"./data/cs19l_EN_1.0p.sav\",\n    \"./data/cs20m_EN_1.1p.sav\", \"./data/cs21n_EN_1.1p.sav\",\n    \"./data/cs22o_EN_1.1p.sav\",\n    \n    \"./data/ch08b_EN_1.3p.sav\", \"./data/ch09c_EN_1.1p.sav\", \n    \"./data/ch10d_EN_1.0p.sav\", \"./data/ch11e_EN_1.0p.sav\", \n    \"./data/ch12f_EN_1.0p.sav\", \"./data/ch13g_EN_1.0p.sav\", \n    \"./data/ch15h_EN_1.2p.sav\", \"./data/ch16i_EN_1.0p.sav\",\n    \"./data/ch17j_EN_1.0p.sav\", \"./data/ch18k_EN_1.0p.sav\", \n    \"./data/ch19l_EN_1.0p.sav\", \"./data/ch20m_EN_1.0p.sav\",\n    \"./data/ch21n_EN_1.0p.sav\", \"./data/ch22o_EN_1.0p.sav\",\n         \n    \"./data/cp08a_1p_EN.sav\", \"./data/cp09b_1.0p_EN.sav\", \n    \"./data/cp10c_1.0p_EN.sav\", \"./data/cp11d_1.0p_EN.sav\", \n    \"./data/cp12e_1.0p_EN.sav\", \"./data/cp13f_EN_1.0p.sav\", \n    \"./data/cp14g_EN_1.0p.sav\", \"./data/cp15h_EN_1.0p.sav\",\n    \"./data/cp17i_EN_1.0p.sav\", \"./data/cp18j_EN_1.0p.sav\", \n    \"./data/cp19k_EN_1.0p.sav\", \"./data/cp20l_EN_1.0p.sav\",\n    \"./data/cp21m_EN_1.0p.sav\", \"./data/cp22n_EN_1.0p.sav\",\n         \n    \"./data/cf08a_2p_EN.sav\", \"./data/cf09b_EN_2.2p.sav\", \n    \"./data/cf10c_EN_1.0p.sav\", \"./data/cf11d_EN_1.1p.sav\",\n    \"./data/cf12e_EN_2.1p.sav\", \"./data/cf13f_EN_1.1p.sav\", \n    \"./data/cf14g_EN_1.1p.sav\", \"./data/cf15h_EN_1.0p.sav\",\n    \"./data/cf16i_EN_1.0p.sav\", \"./data/cf17j_EN_1.0p.sav\",\n    \"./data/cf18k_EN_1.0p.sav\", \"./data/cf19l_EN_1.0p.sav\",\n    \"./data/cf20m_EN_1.0p.sav\", \"./data/cf21n_EN_1.0p.sav\",\n    \"./data/cf22o_EN_1.0p.sav\", \n    \n    \"./data/ci08a_1.0p_EN.sav\", \"./data/ci09b_EN_1.1p.sav\", \n    \"./data/ci10c_EN_1.0p.sav\", \"./data/ci11d_EN_1.0p.sav\",\n    \"./data/ci12e_1.0p_EN.sav\", \"./data/ci13f_EN_1.2p.sav\", \n    \"./data/ci14g_1.0p_EN.sav\", \"./data/ci15h_EN_2.0p.sav\",\n    \"./data/ci16i_EN_3.0p.sav\", \"./data/ci17j_EN_3.0p.sav\",\n    \"./data/ci18k_EN_2.0p.sav\", \"./data/ci19l_EN_2.0p.sav\", \n    \"./data/ci20m_EN_1.0p.sav\", \"./data/ci21n_EN_1.0p.sav\", \n    \"./data/ci22o_EN_1.0p.sav\"\n  ),\n  read.spss, \n  use.value.labels = FALSE, \n  to.data.frame = TRUE\n) |&gt;\n  reduce(full_join, by = \"nomem_encr\") |&gt;\n  select( # Select exposure, outcome, and covariates\n    nomem_encr, \n    starts_with(\"cf\") & ends_with(\"003\"), # Gender\n    starts_with(\"cf\") & ends_with(\"004\"), # Age\n    \n    starts_with(\"cf\") & ends_with(\"017\"), # Parents address\n    starts_with(\"cf\") & ends_with(\"451\"), # Parents address (from 2015 survey onwards)\n    starts_with(\"cf\") & ends_with(\"018\"), # Father's address\n    starts_with(\"cf\") & ends_with(\"019\"), # Mother's address\n    starts_with(\"cf\") & ends_with(\"024\"), # Currently partnered?\n    starts_with(\"cf\") & ends_with(\"161\"), # Relationship mother (4-point)\n    starts_with(\"cf\") & ends_with(\"162\"), # Relationship father\n    starts_with(\"ci\") & ends_with(\"006\"), # Satisfaction personal financial situation (10-point)\n    \n    starts_with(\"cs\") & ends_with(\"283\"), # Satisfaction with social contacts\n    \n    num_range(\"cp08a0\", 70:79), # Self-esteem\n    num_range(\"cp09b0\", 70:79),\n    num_range(\"cp10c0\", 70:79),\n    num_range(\"cp11d0\", 70:79),\n    num_range(\"cp12e0\", 70:79),\n    num_range(\"cp13f0\", 70:79), \n    num_range(\"cp14g0\", 70:79), \n    num_range(\"cp15h0\", 70:79),\n    num_range(\"cp17i0\", 70:79),\n    num_range(\"cp18j0\", 70:79),\n    num_range(\"cp19k0\", 70:79),\n    num_range(\"cp20l0\", 70:79),\n    num_range(\"cp21m0\", 70:79),\n    num_range(\"cp22n0\", 70:79),\n    \n    num_range(\"cp08a0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)), # Neuroticism\n    num_range(\"cp09b0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp10c0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp11d0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp12e0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp13f0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)), \n    num_range(\"cp14g0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)), \n    num_range(\"cp15h0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp17i0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp18j0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp19k0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp20l0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp21m0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    num_range(\"cp22n0\", c(23, 28, 33, 38, 43, 48, 53, 58, 63, 68)),\n    \n    starts_with(\"ch\") & ends_with(\"133\"), # Alcohol use (average, last 12 months)\n    starts_with(\"ch\") & (ends_with(\"159\") | ends_with(\"160\") | ends_with(\"161\") | # Drug use (past month)\n                           ends_with(\"162\") | ends_with(\"163\")) \n  ) \n\ndf_LISS &lt;- df_LISS_raw |&gt;\n  rename(\n    ID = nomem_encr, \n    \n    sex_08 = cf08a003, sex_09 = cf09b003, sex_10 = cf10c003, sex_11 = cf11d003,  \n      sex_12 = cf12e003, sex_13 = cf13f003, sex_14 = cf14g003, sex_15 = cf15h003,\n      sex_16 = cf16i003, sex_17 = cf17j003, sex_18 = cf18k003, sex_19 = cf19l003,\n      sex_20 = cf20m003, sex_21 = cf21n003, \n    age_08 = cf08a004, age_09 = cf09b004, age_10 = cf10c004, age_11 = cf11d004, \n      age_12 = cf12e004, age_13 = cf13f004, age_14 = cf14g004, age_15 = cf15h004,\n      age_16 = cf16i004, age_17 = cf17j004, age_18 = cf18k004, age_19 = cf19l004,\n      age_20 = cf20m004, age_21 = cf21n004, age_22 = cf22o004,\n    \n    pAd_08 = cf08a017, pAd_09 = cf09b017, pAd_10 = cf10c017, pAd_11 = cf11d017, \n      pAd_12 = cf12e017, pAd_13 = cf13f017, pAd_14 = cf14g017, pAd_15 = cf15h451, # Per 2015, question number changed\n      pAd_16 = cf16i451, pAd_17 = cf17j451, pAd_18 = cf18k451, pAd_19 = cf19l451,\n      pAd_20 = cf20m451, pAd_21 = cf21n451, pAd_22 = cf22o451,\n    mAd_08 = cf08a018, mAd_09 = cf09b018, mAd_10 = cf10c018, mAd_11 = cf11d018,\n      mAd_12 = cf12e018, mAd_13 = cf13f018, mAd_14 = cf14g018, mAd_15 = cf15h018,\n      mAd_16 = cf16i018, mAd_17 = cf17j018, mAd_18 = cf18k018, mAd_19 = cf19l018,\n      mAd_20 = cf20m018, mAd_21 = cf21n018, mAd_22 = cf22o018,\n    fAd_08 = cf08a019, fAd_09 = cf09b019, fAd_10 = cf10c019, fAd_11 = cf11d019,\n      fAd_12 = cf12e019, fAd_13 = cf13f019, fAd_14 = cf14g019, fAd_15 = cf15h019,\n      fAd_16 = cf16i019, fAd_17 = cf17j019, fAd_18 = cf18k019, fAd_19 = cf19l019,\n      fAd_20 = cf20m019, fAd_21 = cf21n019, fAd_22 = cf22o019,\n    \n    SSC_08 = cs08a283, SSC_09 = cs09b283, SSC_10 = cs10c283, SSC_11 = cs11d283,\n      SSC_12 = cs12e283, SSC_13 = cs13f283, SSC_14 = cs14g283, SSC_15 = cs15h283, \n      SSC_16 = cs16i283, SSC_17 = cs17j283, SSC_18 = cs18k283, SSC_19 = cs19l283, \n      SSC_20 = cs20m283, SSC_21 = cs21n283, SSC_22 = cs22o283,\n    \n    SE1_08 = cp08a070, SE2_08 = cp08a071, SE3_08 = cp08a072, SE4_08 = cp08a073,\n      SE5_08 = cp08a074, SE6_08 = cp08a075, SE7_08 = cp08a076, SE8_08 = cp08a077,\n      SE9_08 = cp08a078, SE10_08 = cp08a079,\n    SE1_09 = cp09b070, SE2_09 = cp09b071, SE3_09 = cp09b072, SE4_09 = cp09b073,\n      SE5_09 = cp09b074, SE6_09 = cp09b075, SE7_09 = cp09b076, SE8_09 = cp09b077,\n      SE9_09 = cp09b078, SE10_09 = cp09b079,\n    SE1_10 = cp10c070, SE2_10 = cp10c071, SE3_10 = cp10c072, SE4_10 = cp10c073,\n      SE5_10 = cp10c074, SE6_10 = cp10c075, SE7_10 = cp10c076, SE8_10 = cp10c077,\n      SE9_10 = cp10c078, SE10_10 = cp10c079,\n    SE1_11 = cp11d070, SE2_11 = cp11d071, SE3_11 = cp11d072, SE4_11 = cp11d073,\n      SE5_11 = cp11d074, SE6_11 = cp11d075, SE7_11 = cp11d076, SE8_11 = cp11d077,\n      SE9_11 = cp11d078, SE10_11 = cp11d079,\n    SE1_12 = cp12e070, SE2_12 = cp12e071, SE3_12 = cp12e072, SE4_12 = cp12e073,\n      SE5_12 = cp12e074, SE6_12 = cp12e075, SE7_12 = cp12e076, SE8_12 = cp12e077,\n      SE9_12 = cp12e078, SE10_12 = cp12e079,\n    SE1_13 = cp13f070, SE2_13 = cp13f071, SE3_13 = cp13f072, SE4_13 = cp13f073,\n      SE5_13 = cp13f074, SE6_13 = cp13f075, SE7_13 = cp13f076, SE8_13 = cp13f077,\n      SE9_13 = cp13f078, SE10_13 = cp13f079,\n    SE1_14 = cp14g070, SE2_14 = cp14g071, SE3_14 = cp14g072, SE4_14 = cp14g073,\n      SE5_14 = cp14g074, SE6_14 = cp14g075, SE7_14 = cp14g076, SE8_14 = cp14g077,\n      SE9_14 = cp14g078, SE10_14 = cp14g079,\n    SE1_15 = cp15h070, SE2_15 = cp15h071, SE3_15 = cp15h072, SE4_15 = cp15h073,\n      SE5_15 = cp15h074, SE6_15 = cp15h075, SE7_15 = cp15h076, SE8_15 = cp15h077,\n      SE9_15 = cp15h078, SE10_15 = cp15h079,\n    SE1_17 = cp17i070, SE2_17 = cp17i071, SE3_17 = cp17i072, SE4_17 = cp17i073,\n      SE5_17 = cp17i074, SE6_17 = cp17i075, SE7_17 = cp17i076, SE8_17 = cp17i077,\n      SE9_17 = cp17i078, SE10_17 = cp17i079,\n    SE1_18 = cp18j070, SE2_18 = cp18j071, SE3_18 = cp18j072, SE4_18 = cp18j073,\n      SE5_18 = cp18j074, SE6_18 = cp18j075, SE7_18 = cp18j076, SE8_18 = cp18j077,\n      SE9_18 = cp18j078, SE10_18 = cp18j079,\n    SE1_19 = cp19k070, SE2_19 = cp19k071, SE3_19 = cp19k072, SE4_19 = cp19k073,\n      SE5_19 = cp19k074, SE6_19 = cp19k075, SE7_19 = cp19k076, SE8_19 = cp19k077,\n      SE9_19 = cp19k078, SE10_19 = cp19k079,\n    SE1_20 = cp20l070, SE2_20 = cp20l071, SE3_20 = cp20l072, SE4_20 = cp20l073,\n      SE5_20 = cp20l074, SE6_20 = cp20l075, SE7_20 = cp20l076, SE8_20 = cp20l077,\n      SE9_20 = cp20l078, SE10_20 = cp20l079,\n    SE1_21 = cp21m070, SE2_21 = cp21m071, SE3_21 = cp21m072, SE4_21 = cp21m073,\n      SE5_21 = cp21m074, SE6_21 = cp21m075, SE7_21 = cp21m076, SE8_21 = cp21m077,\n      SE9_21 = cp21m078, SE10_21 = cp21m079,\n    SE1_22 = cp22n070, SE2_22 = cp22n071, SE3_22 = cp22n072, SE4_22 = cp22n073,\n      SE5_22 = cp22n074, SE6_22 = cp22n075, SE7_22 = cp22n076, SE8_22 = cp22n077,\n      SE9_22 = cp22n078, SE10_22 = cp22n079,\n    \n    Ne1_08 = cp08a023, Ne2_08 = cp08a028, Ne3_08 = cp08a033, Ne4_08 = cp08a038,\n      Ne5_08 = cp08a043, Ne6_08 = cp08a048, Ne7_08 = cp08a053, Ne8_08 = cp08a058,\n      Ne9_08 = cp08a063, Ne10_08 = cp08a068,\n    Ne1_09 = cp09b023, Ne2_09 = cp09b028, Ne3_09 = cp09b033, Ne4_09 = cp09b038,\n      Ne5_09 = cp09b043, Ne6_09 = cp09b048, Ne7_09 = cp09b053, Ne8_09 = cp09b058,\n      Ne9_09 = cp09b063, Ne10_09 = cp09b068,\n    Ne1_10 = cp10c023, Ne2_10 = cp10c028, Ne3_10 = cp10c033, Ne4_10 = cp10c038,\n      Ne5_10 = cp10c043, Ne6_10 = cp10c048, Ne7_10 = cp10c053, Ne8_10 = cp10c058,\n      Ne9_10 = cp10c063, Ne10_10 = cp10c068,\n    Ne1_11 = cp11d023, Ne2_11 = cp11d028, Ne3_11 = cp11d033, Ne4_11 = cp11d038,\n      Ne5_11 = cp11d043, Ne6_11 = cp11d048, Ne7_11 = cp11d053, Ne8_11 = cp11d058,\n      Ne9_11 = cp11d063, Ne10_11 = cp11d068,\n    Ne1_12 = cp12e023, Ne2_12 = cp12e028, Ne3_12 = cp12e033, Ne4_12 = cp12e038,\n      Ne5_12 = cp12e043, Ne6_12 = cp12e048, Ne7_12 = cp12e053, Ne8_12 = cp12e058,\n      Ne9_12 = cp12e063, Ne10_12 = cp12e068,\n    Ne1_13 = cp13f023, Ne2_13 = cp13f028, Ne3_13 = cp13f033, Ne4_13 = cp13f038,\n      Ne5_13 = cp13f043, Ne6_13 = cp13f048, Ne7_13 = cp13f053, Ne8_13 = cp13f058,\n      Ne9_13 = cp13f063, Ne10_13 = cp13f068,\n    Ne1_14 = cp14g023, Ne2_14 = cp14g028, Ne3_14 = cp14g033, Ne4_14 = cp14g038,\n      Ne5_14 = cp14g043, Ne6_14 = cp14g048, Ne7_14 = cp14g053, Ne8_14 = cp14g058,\n      Ne9_14 = cp14g063, Ne10_14 = cp14g068,\n    Ne1_15 = cp15h023, Ne2_15 = cp15h028, Ne3_15 = cp15h033, Ne4_15 = cp15h038,\n      Ne5_15 = cp15h043, Ne6_15 = cp15h048, Ne7_15 = cp15h053, Ne8_15 = cp15h058,\n      Ne9_15 = cp15h063, Ne10_15 = cp15h068,\n    Ne1_17 = cp17i023, Ne2_17 = cp17i028, Ne3_17 = cp17i033, Ne4_17 = cp17i038,\n      Ne5_17 = cp17i043, Ne6_17 = cp17i048, Ne7_17 = cp17i053, Ne8_17 = cp17i058,\n      Ne9_17 = cp17i063, Ne10_17 = cp17i068,\n    Ne1_18 = cp18j023, Ne2_18 = cp18j028, Ne3_18 = cp18j033, Ne4_18 = cp18j038,\n      Ne5_18 = cp18j043, Ne6_18 = cp18j048, Ne7_18 = cp18j053, Ne8_18 = cp18j058,\n      Ne9_18 = cp18j063, Ne10_18 = cp18j068,\n    Ne1_19 = cp19k023, Ne2_19 = cp19k028, Ne3_19 = cp19k033, Ne4_19 = cp19k038,\n      Ne5_19 = cp19k043, Ne6_19 = cp19k048, Ne7_19 = cp19k053, Ne8_19 = cp19k058,\n      Ne9_19 = cp19k063, Ne10_19 = cp19k068,\n    Ne1_20 = cp20l023, Ne2_20 = cp20l028, Ne3_20 = cp20l033, Ne4_20 = cp20l038,\n      Ne5_20 = cp20l043, Ne6_20 = cp20l048, Ne7_20 = cp20l053, Ne8_20 = cp20l058,\n      Ne9_20 = cp20l063, Ne10_20 = cp20l068,\n    Ne1_21 = cp21m023, Ne2_21 = cp21m028, Ne3_21 = cp21m033, Ne4_21 = cp21m038,\n      Ne5_21 = cp21m043, Ne6_21 = cp21m048, Ne7_21 = cp21m053, Ne8_21 = cp21m058,\n      Ne9_21 = cp21m063, Ne10_21 = cp21m068,\n    Ne1_22 = cp22n023, Ne2_22 = cp22n028, Ne3_22 = cp22n033, Ne4_22 = cp22n038,\n      Ne5_22 = cp22n043, Ne6_22 = cp22n048, Ne7_22 = cp22n053, Ne8_22 = cp22n058,\n      Ne9_22 = cp22n063, Ne10_22 = cp22n068,\n    \n    alc_08 = ch08b133, alc_09 = ch09c133, alc_10 = ch10d133, alc_11= ch11e133, \n      alc_12 = ch12f133, alc_13 = ch13g133, alc_15 = ch15h133, alc_16 = ch16i133,\n      alc_17 = ch17j133, alc_18 = ch18k133, alc_19 = ch19l133, alc_20 = ch20m133,\n      alc_21 = ch21n133, alc_22 = ch22o133,\n\n    mum_08 = cf08a161, mum_09 = cf09b161, mum_10 = cf10c161, mum_11= cf11d161, \n      mum_12 = cf12e161, mum_13 = cf13f161, mum_14 = cf14g161, mum_15 = cf15h161, \n      mum_16 = cf16i161, mum_17 = cf17j161, mum_18 = cf18k161, mum_19 = cf19l161,\n      mum_20 = cf20m161, mum_21 = cf21n161, mum_22 = cf22o161,\n    \n    dad_08 = cf08a162, dad_09 = cf09b162, dad_10 = cf10c162, dad_11= cf11d162, \n      dad_12 = cf12e162, dad_13 = cf13f162, dad_14 = cf14g162, dad_15 = cf15h162, \n      dad_16 = cf16i162, dad_17 = cf17j162, dad_18 = cf18k162, dad_19 = cf19l162,\n      dad_20 = cf20m162, dad_21 = cf21n162, dad_22 = cf22o162,\n    \n    part_08 = cf08a024, part_09 = cf09b024, part_10 = cf10c024, part_11 = cf11d024, \n      part_12 = cf12e024, part_13 = cf13f024, part_14 = cf14g024, part_15 = cf15h024,\n      part_16 = cf16i024, part_17 = cf17j024, part_18 = cf18k024, part_19 = cf19l024,\n      part_20 = cf20m024, part_21 = cf21n024, part_22 = cf22o024,\n    \n    fiSa_08 = ci08a006, fiSa_09 = ci09b006, fiSa_10 = ci10c006, fiSa_11 = ci11d006, \n      fiSa_12 = ci12e006, fiSa_13 = ci13f006, fiSa_14 = ci14g006, fiSa_15 = ci15h006,\n      fiSa_16 = ci16i006, fiSa_17 = ci17j006, fiSa_18 = ci18k006, fiSa_19 = ci19l006,\n      fiSa_20 = ci20m006, fiSa_21 = ci21n006, fiSa_22 = ci22o006,\n    \n    seda_08 = ch08b159, soft_08 = ch08b160, xtc_08 = ch08b161, hall_08 = ch08b162,\n      hard_08 = ch08b163,\n    seda_09 = ch09c159, soft_09 = ch09c160, xtc_09 = ch09c161, hall_09 = ch09c162,\n      hard_09 = ch09c163,\n    seda_10 = ch10d159, soft_10 = ch10d160, xtc_10 = ch10d161, hall_10 = ch10d162,\n      hard_10 = ch10d163,\n    seda_11 = ch11e159, soft_11 = ch11e160, xtc_11 = ch11e161, hall_11 = ch11e162,\n      hard_11 = ch11e163,\n    seda_12 = ch12f159, soft_12 = ch12f160, xtc_12 = ch12f161, hall_12 = ch12f162,\n      hard_12 = ch12f163,\n    seda_13 = ch13g159, soft_13 = ch13g160, xtc_13 = ch13g161, hall_13 = ch13g162,\n      hard_13 = ch13g163,\n    seda_15 = ch15h159, soft_15 = ch15h160, xtc_15 = ch15h161, hall_15 = ch15h162,\n      hard_15 = ch15h163,\n    seda_16 = ch16i159, soft_16 = ch16i160, xtc_16 = ch16i161, hall_16 = ch16i162,\n      hard_16 = ch16i163,\n    seda_17 = ch17j159, soft_17 = ch17j160, xtc_17 = ch17j161, hall_17 = ch17j162,\n      hard_17 = ch17j163,\n    seda_18 = ch18k159, soft_18 = ch18k160, xtc_18 = ch18k161, hall_18 = ch18k162,\n      hard_18 = ch18k163,\n    seda_19 = ch19l159, soft_19 = ch19l160, xtc_19 = ch19l161, hall_19 = ch19l162,\n      hard_19 = ch19l163,\n    seda_20 = ch20m159, soft_20 = ch20m160, xtc_20 = ch20m161, hall_20 = ch20m162,\n      hard_20 = ch20m163,\n    seda_21 = ch21n159, soft_21 = ch21n160, xtc_21 = ch21n161, hall_21 = ch21n162,\n      hard_21 = ch21n163,\n    seda_22 = ch22o159, soft_22 = ch22o160, xtc_22 = ch22o161, hall_22 = ch22o162,\n      hard_22 = ch22o163\n  ) \n\nNext, we selected those individuals that belonged to our target population, and prepared the data for analyses. This involved recoding reverse-coded items, creating mean scores for the self-esteem and neuroticism items, creating a new dummy variable for frequent drug use, and filling in missing values by single imputation.\n\n# For each enrollment year, select target population\ndf_target09 &lt;- df_LISS |&gt; filter(\n  (pAd_08 == 4 | fAd_08 == 4 | mAd_08 == 4) &\n    (pAd_09 != 4 | fAd_09 != 4 | mAd_09 != 4)\n) |&gt;\n  mutate(\n    time_08 = 0, time_09 = 1, time_10 = 2, time_11 = 3, time_12 = 4, \n    time_13 = 5, time_14 = 6, time_15 = 7, time_16 = 8, time_17 = 9, \n    time_18 = 10, time_19 = 11, time_20 = 12, time_21 = 13, time_22 = 14\n  )\n\ndf_target10 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID)  & \n    (pAd_09 == 4 | fAd_09 == 4 | mAd_09 == 4) &\n    (pAd_10 != 4 | fAd_10 != 4 | mAd_10 != 4)\n) |&gt;\n  mutate(\n    time_08 = -1, time_09 = 0, time_10 = 1, time_11 = 2, time_12 = 3, \n    time_13 = 4, time_14 = 5, time_15 = 6, time_16 = 7, time_17 = 8, \n    time_18 = 9, time_19 = 10, time_20 = 11, time_21 = 12, time_22 = 13\n  )\n\ndf_target11 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID) &\n    (pAd_10 == 4 | fAd_10 == 4 | mAd_10 == 4) & \n    (pAd_11 != 4 | fAd_11 != 4 | mAd_11 != 4) \n) |&gt;\n  mutate(\n    time_08 = -2, time_09 = -1, time_10 = 0, time_11 = 1, time_12 = 2, \n    time_13 = 3, time_14 = 4, time_15 = 5, time_16 = 6, time_17 = 7, \n    time_18 = 8, time_19 = 9, time_20 = 10, time_21 = 11, time_22 = 12\n  )\n\ndf_target12 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID) &\n    (pAd_11 == 4 | fAd_11 == 4 | mAd_11 == 4) & \n    (pAd_12 != 4 | fAd_12 != 4 | mAd_12 != 4)\n) |&gt;\n  mutate(\n    time_08 = -3, time_09 = -2, time_10 = -1, time_11 = 0, time_12 = 1, \n    time_13 = 2, time_14 = 3, time_15 = 4, time_16 = 5, time_17 = 6, \n    time_18 = 7, time_19 = 8, time_20 = 9, time_21 = 10, time_22 = 11\n  )\n\ndf_target13 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID) &\n    (pAd_12 == 4 | fAd_12 == 4 | mAd_12 == 4) &\n    (pAd_13 != 4 | fAd_13 != 4 | mAd_13 != 4)\n) |&gt;\n  mutate(\n    time_08 = -4, time_09 = -3, time_10 = -2, time_11 = -1, time_12 = 0, \n    time_13 = 1, time_14 = 2, time_15 = 3, time_16 = 4, time_17 = 5, \n    time_18 = 6, time_19 = 7, time_20 = 8, time_21 = 9, time_22 = 10\n  )\n\ndf_target14 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID) &\n    (pAd_13 == 4 | fAd_13 == 4 | mAd_13 == 4) &\n    (pAd_14 != 4 | fAd_14 != 4 | mAd_14 != 4) \n) |&gt;\n  mutate(\n    time_08 = -5, time_09 = -4, time_10 = -3, time_11 = -2, time_12 = -1, \n    time_13 = 0, time_14 = 1, time_15 = 2, time_16 = 3, time_17 = 4, \n    time_18 = 5, time_19 = 6, time_20 = 7, time_21 = 8, time_22 = 9\n  )\n\ndf_target15 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID) &\n    (pAd_14 == 4 | fAd_14 == 4 | mAd_14 == 4) &\n    (pAd_15 != 4 | fAd_15 != 4 | mAd_15 != 4)\n) |&gt;\n  mutate(\n    time_08 = -6, time_09 = -5, time_10 = -4, time_11 = -3, time_12 = -2, \n    time_13 = -1, time_14 = 0, time_15 = 1, time_16 = 2, time_17 = 3, \n    time_18 = 4, time_19 = 5, time_20 = 6, time_21 = 7, time_22 = 8\n  )\n\ndf_target16 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID) &\n    (pAd_15 == 4 | fAd_15 == 4 | mAd_15 == 4) &\n    (pAd_16 != 4 | fAd_16 != 4 | mAd_16 != 4)\n) |&gt;\n  mutate(\n    time_08 = -7, time_09 = -6, time_10 = -5, time_11 = -4, time_12 = -3, \n    time_13 = -2, time_14 = -1, time_15 = 0, time_16 = 1, time_17 = 2, \n    time_18 = 3, time_19 = 4, time_20 = 5, time_21 = 6, time_22 = 7\n  )\n\ndf_target17 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID) &\n    (pAd_16 == 4 | fAd_16 == 4 | mAd_16 == 4) &\n    (pAd_17 != 4 | fAd_17 != 4 | mAd_17 != 4)\n) |&gt;\n  mutate(\n    time_08 = -8, time_09 = -7, time_10 = -6, time_11 = -5, time_12 = -4, \n    time_13 = -3, time_14 = -2, time_15 = -1, time_16 = 0, time_17 = 1, \n    time_18 = 2, time_19 = 3, time_20 = 4, time_21 = 5, time_22 = 6\n  )\n\ndf_target18 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID,\n             df_target17$ID) &\n    (pAd_17 == 4 | fAd_17 == 4 | mAd_17 == 4) &\n    (pAd_18 != 4 | fAd_18 != 4 | mAd_18 != 4)\n) |&gt;\n  mutate(\n    time_08 = -9, time_09 = -8, time_10 = -7, time_11 = -6, time_12 = -5, \n    time_13 = -4, time_14 = -3, time_15 = -2, time_16 = -1, time_17 = 0, \n    time_18 = 1, time_19 = 2, time_20 = 3, time_21 = 4, time_22 = 5\n  )\n\ndf_target19 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID,\n             df_target17$ID, df_target18$ID) &\n    (pAd_18 == 4 | fAd_18 == 4 | mAd_18 == 4) &\n    (pAd_19 != 4 | fAd_19 != 4 | mAd_19 != 4)\n) |&gt;\n  mutate(\n    time_08 = -10, time_09 = -9, time_10 = -8, time_11 = -7, time_12 = -6, \n    time_13 = -5, time_14 = -4, time_15 = -3, time_16 = -2, time_17 = -1, \n    time_18 = 0, time_19 = 1, , time_20 = 2, time_21 = 3, time_22 = 4\n  )\n\ndf_target20 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID,\n             df_target17$ID, df_target18$ID, df_target19$ID) &\n    (pAd_19 == 4 | fAd_19 == 4 | mAd_19 == 4) &\n    (pAd_20 != 4 | fAd_20 != 4 | mAd_20 != 4)\n) |&gt;\n  mutate(\n    time_08 = -11, time_09 = -10, time_10 = -9, time_11 = -8, time_12 = -7, \n    time_13 = -6, time_14 = -5, time_15 = -4, time_16 = -3, time_17 = -2, \n    time_18 = -1, time_19 = 0, , time_20 = 1, time_21 = 2, time_22 = 3\n  )\n\ndf_target21 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID,\n             df_target17$ID, df_target18$ID, df_target19$ID, df_target20$ID) &\n    (pAd_20 == 4 | fAd_20 == 4 | mAd_20 == 4) &\n    (pAd_21 != 4 | fAd_21 != 4 | mAd_21 != 4)\n) |&gt;\n  mutate(\n    time_08 = -12, time_09 = -11, time_10 = -10, time_11 = -9, time_12 = -8, \n    time_13 = -7, time_14 = -6, time_15 = -5, time_16 = -4, time_17 = -3, \n    time_18 = -2, time_19 = -1, , time_20 = 0, time_21 = 1, time_22 = 2\n  )\n\ndf_target22 &lt;- df_LISS |&gt; filter(\n  !ID %in% c(df_target09$ID, df_target10$ID, df_target11$ID, df_target12$ID,\n             df_target13$ID, df_target14$ID, df_target15$ID, df_target16$ID,\n             df_target17$ID, df_target18$ID, df_target19$ID, df_target20$ID,\n             df_target21$ID) &\n    (pAd_21 == 4 | fAd_21 == 4 | mAd_21 == 4) &\n    (pAd_22 != 4 | fAd_22 != 4 | mAd_22 != 4)\n) |&gt;\n  mutate(\n    time_08 = -13, time_09 = -12, time_10 = -11, time_11 = -10, time_12 = -9, \n    time_13 = -8, time_14 = -7, time_15 = -6, time_16 = -5, time_17 = -4, \n    time_18 = -3, time_19 = -2, , time_20 = -1, time_21 = 0, time_22 = 1\n  )\n\n# Create full df from target population\ndf_target &lt;- df_target09 |&gt;\n  bind_rows(\n    df_target10, df_target11, df_target12, df_target13, df_target14, df_target15,\n    df_target16, df_target17, df_target18, df_target19, df_target20, df_target21, \n    df_target22\n  ) |&gt;\n  pivot_longer(\n    cols = -ID,\n    names_to = c(\"var\", \"year\"),\n    names_sep = \"_\", \n    names_transform = list(year = as.numeric)\n  ) |&gt;\n  pivot_wider(values_from = value, names_from = var) |&gt;\n  filter(time &gt;= -1, time &lt; 4) |&gt;\n  mutate( # Recode reverse-coded items\n    across(\n      c(\"SE3\", \"SE5\", \"SE8\", \"SE9\", \"SE10\"),\n      ~ dplyr::recode(., `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1)\n    ),\n    across(\n      c(\"Ne2\", \"Ne4\"),\n      ~ dplyr::recode(., `1` = 5, `2` = 4, `4` = 2, `5` = 1)\n    )\n  ) |&gt; \n  arrange(ID, time) |&gt;\n  rowwise(ID) |&gt; # Create SE, NE, and drug factors\n  mutate(\n    fSE = mean(c_across(SE1:SE10), na.rm = TRUE),\n    fNe = mean(c_across(Ne1:Ne10), na.rm = TRUE), \n    drug = if_else(seda &gt; 1 | soft &gt; 1 | xtc &gt; 1 | hall &gt; 1 | hard &gt; 1, 1, 0)\n  ) |&gt;\n  ungroup() |&gt;\n  mutate_all(~ifelse(is.nan(.), NA, .)) |&gt;\n  select(\n    -num_range(\"SE\", 1:10),\n    -pAd, -mAd, -fAd,\n    -year,\n    -starts_with(\"Ne\"),\n    -seda, -soft, -xtc, -hall, -hard\n  ) |&gt;\n  mutate_at(c(\"alc\"), as.ordered) |&gt; # Assign correct measurement level\n  mutate_at(c(\"drug\", \"sex\", \"part\"), as.factor) |&gt;\n  mutate(\n    across(\n      \"time\", \n      ~dplyr::recode(., `-1`= \"b\", `0` = \"0\", `1` = \"1\", `2` = \"2\", `3`= \"3\")\n    )\n  ) |&gt;\n  pivot_wider(names_from = time, values_from = -ID) |&gt;\n  select(\n    -num_range(\"age_\", 0:3),\n    -num_range(\"sex_\", 0:3),\n    -starts_with(\"time\"), \n    -num_range(\"fNe_\", 0:3),\n    -num_range(\"mum_\", 0:3),\n    -num_range(\"dad_\", 0:3)\n  )\n\n# Visualize alcohol variable\nhist(as.numeric(df_target$alc_0))\nhist(as.numeric(df_target$alc_1))\nhist(as.numeric(df_target$alc_2))\nhist(as.numeric(df_target$alc_3))\n\n# Single imputation \nfit_imp &lt;- mice(df_target, ridge = 1e-05, m = 1, seed = 20240126)\ndat &lt;- complete(fit_imp) \n\nrm(\n  df_target09, df_target10, df_target11, df_target12, df_target13, df_target14, \n  df_target15, df_target16, df_target17, df_target18, df_target19, df_target20,\n  df_target21, df_target22\n)\n\n\n\nCross-lagged panel modeling using SEM\nIn total, we fit four CLPMs using SEM, namely a CLPM with:\n\nlag-1 relationships, adjusting for no covariates (null set);\nlag-1 relationships, adjusting for the simple covariate adjustment set (simple set);\nlag-1 and lag-2 relationships, adjusting for no covariates (null set, lag-1-2)); and\nlag-1 and lag-2 relationships, adjusting for the simple covariate adjustment set (simple set, lag-1-2)).\n\nBefore fitting the CLPMs, the factor variables are converted to integers using the below code:\n\ndat_lavaan &lt;- dat |&gt;\n  mutate(\n    across(starts_with(\"alc\"), as.integer),\n    across(c(\"sex_b\", \"drug_b\", \"part_b\"), as.integer)\n  )\n\n\nnull setsimple setnull set, lag-1-2simple set, lag-1-2\n\n\nm_CLPM_null &lt;- '\n  # Estimate lagged effects\n  SSC_1 ~ fSE_0 + SSC_0 \n  fSE_1 ~ fSE_0 + b_SS0_fS1*SSC_0 \n  \n  SSC_2 ~ fSE_1 + SSC_1 \n  fSE_2 ~ b_fS1_fS2*fSE_1 + b_SS1_fS2*SSC_1 \n   \n  SSC_3 ~ fSE_2 + SSC_2 \n  fSE_3 ~ b_fS2_fS3*fSE_2 + b_SS2_fS3*SSC_2 \n\n  # Estimate (co)variance at first wave\n  fSE_0 ~~ fSE_0\n  SSC_0 ~~ SSC_0\n  fSE_0 ~~ SSC_0\n  \n  # Estimate residual (co)variances \n  fSE_1 ~~ fSE_1\n  SSC_1 ~~ SSC_1\n  fSE_1 ~~ SSC_1\n  \n  fSE_2 ~~ fSE_2\n  SSC_2 ~~ SSC_2\n  fSE_2 ~~ SSC_2\n  \n  fSE_3 ~~ fSE_3\n  SSC_3 ~~ SSC_3\n  fSE_3 ~~ SSC_3\n  \n  # Define joint effects\n  CDE_0 := b_SS0_fS1 * b_fS1_fS2 * b_fS2_fS3 \n  CDE_1 := b_SS1_fS2 * b_fS2_fS3\n  CDE_2 := b_SS2_fS3\n'\n\nfit_CLPM_null &lt;- lavaan(\n  model = m_CLPM_null,\n  data = dat_lavaan, \n  missing = \"ML\", \n  meanstructure = TRUE, \n  int.ov.free = TRUE,\n  orthogonal.x = FALSE,\n  se = \"bootstrap\", \n  bootstrap = 999,\n  parallel = \"snow\", \n  ncpus = 7\n)\nsummary(fit_CLPM_null)\ninspect(fit_CLPM_null, what = \"fit\")\nparameterEstimates(fit_CLPM_null, boot.ci.type = \"perc\")\n\n\nm_CLPM_simple &lt;- '\n  # Estimate lagged effects\n  SSC_1 ~ fSE_0 + SSC_0 + alc_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  alc_1 ~ fSE_0 + b_SS0_al1*SSC_0 + alc_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  fSE_1 ~ fSE_0 + b_SS0_fS1*SSC_0 + alc_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  fiSa_1 ~ fSE_0 + b_SS0_fi1*SSC_0 + alc_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  \n  SSC_2 ~ fSE_1 + SSC_1 + alc_1 + fiSa_1 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  alc_2 ~ b_fS1_al2*fSE_1 + b_SS1_al2*SSC_1 + b_al1_al2*alc_1 + b_fi1_al2*fiSa_1 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  fSE_2 ~ b_fS1_fS2*fSE_1 + b_SS1_fS2*SSC_1 + b_al1_fS2*alc_1 + b_fi1_fS2*fiSa_1 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fiSa_2 ~ b_fS1_fi2*fSE_1 + b_SS1_fi2*SSC_1 + b_al1_fi2*alc_1 + b_fi1_fi2*fiSa_1 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n    \n  SSC_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  alc_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fSE_3 ~ b_fS2_fS3*fSE_2 + b_SS2_fS3*SSC_2 + b_al2_fS3*alc_2 + b_fi2_fS3*fiSa_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fiSa_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n\n  # Estimate (co)variances at baseline\n  age_b ~~ age_b\n  sex_b ~~ sex_b\n  fNe_b ~~ fNe_b\n  mum_b ~~ mum_b\n  dad_b ~~ dad_b\n  SSC_b ~~ SSC_b\n  fSE_b ~~ fSE_b\n  drug_b ~~ drug_b\n  alc_b ~~ alc_b\n  part_b ~~ part_b\n  fiSa_b ~~ fiSa_b\n  \n  fSE_0 ~~ fSE_0\n  SSC_0 ~~ SSC_0\n  alc_0 ~~ alc_0\n  fiSa_0 ~~ fiSa_0\n   \n  age_b ~~ sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  sex_b ~~ fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fNe_b ~~ mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  mum_b ~~ dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  dad_b ~~ SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  SSC_b ~~ fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fSE_b ~~ drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  drug_b ~~ alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  alc_b ~~ part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  part_b ~~ fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fiSa_b ~~ fSE_0 + SSC_0 + fiSa_0 + alc_0\n  \n  fSE_0 ~~ SSC_0 + fiSa_0 + alc_0 \n  SSC_0 ~~ fiSa_0 + alc_0\n  fiSa_0 ~~ alc_0\n  \n  # Estimate residual (co)variances\n  fSE_1 ~~ fSE_1\n  SSC_1 ~~ SSC_1\n  alc_1 ~~ alc_1\n  fiSa_1 ~~ fiSa_1\n  \n  fSE_1 ~~ SSC_1 + alc_1 + fiSa_1\n  SSC_1 ~~ alc_1 + fiSa_1\n  alc_1 ~~ fiSa_1\n  \n  fSE_2 ~~ fSE_2\n  SSC_2 ~~ SSC_2\n  alc_2 ~~ alc_2\n  fiSa_2 ~~ fiSa_2\n  \n  fSE_2 ~~ SSC_2 + alc_2 + fiSa_2\n  SSC_2 ~~ alc_2 + fiSa_2\n  alc_2 ~~ fiSa_2\n\n  fSE_3 ~~ fSE_3\n  SSC_3 ~~ SSC_3\n  alc_3 ~~ alc_3\n  fiSa_3 ~~ fiSa_3\n  \n  fSE_3 ~~ SSC_3 + alc_3 + fiSa_3\n  SSC_3 ~~ alc_3 + fiSa_3\n  alc_3 ~~ fiSa_3\n  \n  # Define joint effects\n  CDE_0 := b_SS0_fS1 * b_fS1_fS2 * b_fS2_fS3 +\n           b_SS0_fS1 * b_fS1_al2 * b_al2_fS3 +\n           b_SS0_fS1 * b_fS1_fi2 * b_fi2_fS3 +\n\n           b_SS0_al1 * b_al1_al2 * b_al2_fS3 +\n           b_SS0_al1 * b_al1_fS2 * b_fS2_fS3 +\n           b_SS0_al1 * b_al1_fi2 * b_fi2_fS3 +\n\n           b_SS0_fi1 * b_fi1_fi2 * b_fi2_fS3 +\n           b_SS0_fi1 * b_fi1_al2 * b_al2_fS3 +\n           b_SS0_fi1 * b_fi1_fS2 * b_fS2_fS3\n\n  CDE_1 := b_SS1_fS2 * b_fS2_fS3 +\n           b_SS1_al2 * b_al2_fS3 +\n           b_SS1_fi2 * b_fi2_fS3\n\n  CDE_2 := b_SS2_fS3\n'\n\nfit_CLPM_simple &lt;- lavaan(\n  model = m_CLPM_simple,\n  data = dat_lavaan, \n  missing = \"ML\", \n  meanstructure = TRUE, \n  int.ov.free = TRUE,\n  se = \"bootstrap\", \n  bootstrap = 999,\n  parallel = \"snow\", \n  ncpus = 7\n)\n\nsummary(fit_CLPM_simple)\ninspect(fit_CLPM_simple, what = \"fit\")\nparameterEstimates(fit_CLPM_simple, boot.ci.type = \"perc\")\n\n\nm_CLPM2_null &lt;- '\n  # Estimate lagged effects\n  SSC_1 ~ fSE_0 + SSC_0 + fSE_b + SSC_b\n  fSE_1 ~ fSE_0 + b_SS0_fS1*SSC_0 + fSE_b + SSC_b\n  \n  SSC_2 ~ fSE_1 + SSC_1 + fSE_0 + SSC_0\n  fSE_2 ~ b_fS1_fS2*fSE_1 + b_SS1_fS2*SSC_1 + fSE_0 + b_SS0_fS2*SSC_0\n   \n  SSC_3 ~ fSE_2 + SSC_2 + fSE_1 + SSC_1\n  fSE_3 ~ b_fS2_fS3*fSE_2 + b_SS2_fS3*SSC_2 + b_fS1_fS3*fSE_1 + b_SS1_fS3*SSC_1\n\n  # Estimate (co)variance at first wave\n  fSE_b ~~ fSE_b\n  SSC_b ~~ SSC_b\n  \n  fSE_0 ~~ fSE_0\n  SSC_0 ~~ SSC_0\n  \n  fSE_b ~~ SSC_b + fSE_0 + SSC_0\n  SSC_b ~~ fSE_0 + SSC_0\n  fSE_0 ~~ SSC_0\n  \n  # Estimate residual (co)variances \n  fSE_1 ~~ fSE_1\n  SSC_1 ~~ SSC_1\n  fSE_1 ~~ SSC_1\n  \n  fSE_2 ~~ fSE_2\n  SSC_2 ~~ SSC_2\n  fSE_2 ~~ SSC_2\n  \n  fSE_3 ~~ fSE_3\n  SSC_3 ~~ SSC_3\n  fSE_3 ~~ SSC_3\n  \n  # Define joint effects\n  CDE_0 := b_SS0_fS1 * b_fS1_fS2 * b_fS2_fS3 +\n           b_SS0_fS1 * b_fS1_fS3 + \n           b_SS0_fS2 * b_fS2_fS3 \n           \n  CDE_1 := b_SS1_fS2 * b_fS2_fS3 +\n           b_SS1_fS3\n           \n  CDE_2 := b_SS2_fS3 \n'\n\nfit_CLPM2_null &lt;- lavaan(\n  model = m_CLPM2_null,\n  data = dat_lavaan, \n  missing = \"ML\", \n  meanstructure = TRUE, \n  int.ov.free = TRUE,\n  orthogonal.x = FALSE,\n  se = \"bootstrap\", \n  bootstrap = 999,\n  parallel = \"snow\", \n  ncpus = 7\n)\nsummary(fit_CLPM2_null)\ninspect(fit_CLPM2_null, what = \"fit\")\nparameterEstimates(fit_CLPM2_null, boot.ci.type = \"perc\")\n\n\nm_CLPM2_simple &lt;- '\n  # Estimate lagged effects\n  SSC_1 ~ fSE_0 + SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  alc_1 ~ fSE_0 + b_SS0_al1*SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fSE_1 ~ fSE_0 + b_SS0_fS1*SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b  \n  fiSa_1 ~ fSE_0 + b_SS0_fi1*SSC_0 + alc_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  \n  SSC_2 ~ fSE_1 + SSC_1 + alc_1 + fiSa_1 +\n    fSE_0 + SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  alc_2 ~ b_fS1_al2*fSE_1 + b_SS1_al2*SSC_1 + b_al1_al2*alc_1 + b_fi1_al2*fiSa_1 +\n    fSE_0 + alc_0 + b_SS0_al2*SSC_0 + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fSE_2 ~ b_fS1_fS2*fSE_1 + b_SS1_fS2*SSC_1 + b_al1_fS2*alc_1 + b_fi1_fS2*fiSa_1 + \n    fSE_0 + b_SS0_fS2*SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fiSa_2 ~ b_fS1_fi2*fSE_1 + b_SS1_fi2*SSC_1 + b_al1_fi2*alc_1 + b_fi1_fi2*fiSa_1 + \n    fSE_0 + b_SS0_fi2*SSC_0 + alc_0 + fiSa_0 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  \n  SSC_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 +\n    fSE_1 + SSC_1 + alc_1 + fiSa_1 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  alc_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 +\n    fSE_1 + SSC_1 + alc_1 + fiSa_1 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fSE_3 ~ b_fS2_fS3*fSE_2 + b_SS2_fS3*SSC_2 + b_al2_fS3*alc_2 + b_fi2_fS3*fiSa_2 +\n    b_fS1_fS3*fSE_1 + b_SS1_fS3*SSC_1 + b_al1_fS3*alc_1 + b_fi1_fS3*fiSa_1 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n  fiSa_3 ~ fSE_2 + SSC_2 + alc_2 + fiSa_2 + \n    fSE_1 + SSC_1 + alc_1 + fiSa_1 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b \n\n  # Estimate (co)variances at baseline\n  age_b ~~ age_b\n  sex_b ~~ sex_b\n  fNe_b ~~ fNe_b\n  mum_b ~~ mum_b\n  dad_b ~~ dad_b\n  SSC_b ~~ SSC_b\n  fSE_b ~~ fSE_b\n  drug_b ~~ drug_b\n  alc_b ~~ alc_b\n  part_b ~~ part_b\n  fiSa_b ~~ fiSa_b\n  \n  fSE_0 ~~ fSE_0\n  SSC_0 ~~ SSC_0\n  alc_0 ~~ alc_0\n  fiSa_0 ~~ fiSa_0\n   \n  age_b ~~ sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  sex_b ~~ fNe_b + mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fNe_b ~~ mum_b + dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  mum_b ~~ dad_b + SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  dad_b ~~ SSC_b + fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  SSC_b ~~ fSE_b + drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fSE_b ~~ drug_b + alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  drug_b ~~ alc_b + part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  alc_b ~~ part_b + fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  part_b ~~ fiSa_b + fSE_0 + SSC_0 + fiSa_0 + alc_0\n  fiSa_b ~~ fSE_0 + SSC_0 + fiSa_0 + alc_0\n  \n  fSE_0 ~~ SSC_0 + fiSa_0 + alc_0 \n  SSC_0 ~~ fiSa_0 + alc_0\n  fiSa_0 ~~ alc_0\n  \n  # Estimate residual (co)variances\n  fSE_1 ~~ fSE_1\n  SSC_1 ~~ SSC_1\n  alc_1 ~~ alc_1\n  fiSa_1 ~~ fiSa_1\n  \n  fSE_1 ~~ SSC_1 + alc_1 + fiSa_1\n  SSC_1 ~~ alc_1 + fiSa_1\n  alc_1 ~~ fiSa_1\n  \n  fSE_2 ~~ fSE_2\n  SSC_2 ~~ SSC_2\n  alc_2 ~~ alc_2\n  fiSa_2 ~~ fiSa_2\n  \n  fSE_2 ~~ SSC_2 + alc_2 + fiSa_2\n  SSC_2 ~~ alc_2 + fiSa_2\n  alc_2 ~~ fiSa_2\n\n  fSE_3 ~~ fSE_3\n  SSC_3 ~~ SSC_3\n  alc_3 ~~ alc_3\n  fiSa_3 ~~ fiSa_3\n  \n  fSE_3 ~~ SSC_3 + alc_3 + fiSa_3\n  SSC_3 ~~ alc_3 + fiSa_3\n  alc_3 ~~ fiSa_3\n  \n  # Define joint effects\n  CDE_0 := b_SS0_fS1 * b_fS1_fS2 * b_fS2_fS3 +\n           b_SS0_fS1 * b_fS1_al2 * b_al2_fS3 + \n           b_SS0_fS1 * b_fS1_fi2 * b_fi2_fS3 +\n           \n           b_SS0_al1 * b_al1_al2 * b_al2_fS3 + \n           b_SS0_al1 * b_al1_fS2 * b_fS2_fS3 + \n           b_SS0_al1 * b_al1_fi2 * b_fi2_fS3 +\n           \n           b_SS0_fi1 * b_fi1_fi2 * b_fi2_fS3 +\n           b_SS0_fi1 * b_fi1_al2 * b_al2_fS3 +\n           b_SS0_fi1 * b_fi1_fS2 * b_fS2_fS3 +\n           \n           b_SS0_al1 * b_al1_fS3 +\n           b_SS0_fS1 * b_fS1_fS3 +\n           b_SS0_fi1 * b_fi1_fS3 + \n           \n           b_SS0_al2 * b_al2_fS3 +\n           b_SS0_fS2 * b_fS2_fS3 +\n           b_SS0_fi2 * b_fi2_fS3 \n  \n  CDE_1 := b_SS1_fS2 * b_fS2_fS3 + \n           b_SS1_al2 * b_al2_fS3 + \n           b_SS1_fi2 * b_fi2_fS3 +\n           \n           b_SS1_fS3\n  \n  CDE_2 := b_SS2_fS3\n'\n\nfit_CLPM2_simple &lt;- lavaan(\n  model = m_CLPM2_simple,\n  data = dat_lavaan, \n  missing = \"ML\", \n  meanstructure = TRUE, \n  int.ov.free = TRUE,\n  se = \"bootstrap\", \n  bootstrap = 999,\n  parallel = \"snow\", \n  ncpus = 7\n)\nsummary(fit_CLPM2_simple)\ninspect(fit_CLPM2_simple, what = \"fit\")\nparameterEstimates(fit_CLPM2_simple, boot.ci.type = \"perc\")\n\n\n\n\n\nRepeated multiple regression\nIn total, we employ six repeated multiple regression analyses, namely repeated multiple regression with:\n\nlag-1 relationships, adjusting for no covariates (null set);\nlag-1 relationships, adjusting for the simple covariate adjustment set (simple set);\nlag-1 relationships, adjusting for the full covariate adjustment set (full set);\nlag-1 and lag-2 relationships, adjusting for no covariates (null set, lag-1-2);\nlag-1 and lag-2 relationships, adjusting for the simple covariate adjustment set (simple set, lag-1-2); and\nlag-1 and lag-2 relationships, adjusting for the full covariate adjustment set (full set, lag-1-2).\n\n\nnull setsimple setfull setnull set, lag-1-2simple set, lag-1-2full set, lag-1-2\n\n\nfit_CDE2_MRR_null &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + SSC_b + fSE_b, \n  data = dat\n)\nboot_CDE2_MRR_null &lt;- car::Boot(fit_CDE2_MRR_null, R = 999)\nboot.ci(boot_CDE2_MRR_null, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR_null &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + SSC_2 + SSC_b + fSE_b, \n    data = dat\n)\nboot_CDE1_MRR_null &lt;- car::Boot(fit_CDE1_MRR_null, R = 999)\nboot.ci(boot_CDE1_MRR_null, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR_null &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + SSC_1 + SSC_2 + SSC_b + fSE_b,\n    data = dat\n)\nboot_CDE0_MRR_null &lt;- car::Boot(fit_CDE0_MRR_null, R = 999)\nboot.ci(boot_CDE0_MRR_null, type = \"perc\", index = \"SSC_0\")\n\n\nfit_CDE2_MRR_simple &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + factor(alc_2) + fiSa_2 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n  data = dat\n)\nboot_CDE2_MRR_simple &lt;- car::Boot(fit_CDE2_MRR_simple, R = 999)\nboot.ci(boot_CDE2_MRR_simple, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR_simple &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 + \n    SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = dat\n)\nboot_CDE1_MRR_simple &lt;- car::Boot(fit_CDE1_MRR_simple, R = 999)\nboot.ci(boot_CDE1_MRR_simple, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR_simple &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 +\n    SSC_1 + SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = dat\n)\nboot_CDE0_MRR_simple &lt;- car::Boot(fit_CDE0_MRR_simple, R = 999)\nboot.ci(boot_CDE0_MRR_simple, type = \"perc\", index = \"SSC_0\")\n\n\nfit_CDE2_MRR_full &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + factor(alc_2) + fiSa_2 + factor(drug_2) + factor(part_2) +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n  data = dat\n)\nboot_CDE2_MRR_full &lt;- car::Boot(fit_CDE2_MRR_full, R = 999)\nboot.ci(boot_CDE2_MRR_full, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR_full &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 + factor(drug_1) + factor(part_1) +\n    SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = dat\n)\nboot_CDE1_MRR_full &lt;- car::Boot(fit_CDE1_MRR_full, R = 999)\nboot.ci(boot_CDE1_MRR_full, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR_full &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 + factor(drug_0) + factor(part_0) +\n    SSC_1 + SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = dat\n)\nboot_CDE0_MRR_full &lt;- car::Boot(fit_CDE0_MRR_full, R = 999)\nboot.ci(boot_CDE0_MRR_full, type = \"perc\", index = \"SSC_0\")\n\n\nfit_CDE2_MRR2_null &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + SSC_1 + fSE_1 + SSC_b + fSE_b, \n  data = dat\n)\nboot_CDE2_MRR2_null &lt;- car::Boot(fit_CDE2_MRR2_null, R = 999)\nboot.ci(boot_CDE2_MRR2_null, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR2_null &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + SSC_0 + fSE_0 + SSC_2 + SSC_b + fSE_b, \n    data = dat\n)\nboot_CDE1_MRR2_null &lt;- car::Boot(fit_CDE1_MRR2_null, R = 999)\nboot.ci(boot_CDE1_MRR2_null, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR2_null &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + SSC_1 + SSC_2 + SSC_b + fSE_b,\n    data = dat\n)\nboot_CDE0_MRR2_null &lt;- car::Boot(fit_CDE0_MRR2_null, R = 999)\nboot.ci(boot_CDE0_MRR2_null, type = \"perc\", index = \"SSC_0\")\n\n\nfit_CDE2_MRR2_simple &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + factor(alc_2) + fiSa_2 +\n    SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n  data = dat\n)\nboot_CDE2_MRR2_simple &lt;- car::Boot(fit_CDE2_MRR2_simple, R = 999)\nboot.ci(boot_CDE2_MRR2_simple, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR2_simple &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 + \n    SSC_2 + \n    SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = dat\n)\nboot_CDE1_MRR2_simple &lt;- car::Boot(fit_CDE1_MRR2_simple, R = 999)\nboot.ci(boot_CDE1_MRR2_simple, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR2_simple &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 +\n    SSC_1 + SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = dat\n)\nboot_CDE0_MRR2_simple &lt;- car::Boot(fit_CDE0_MRR2_simple, R = 999)\nboot.ci(boot_CDE0_MRR2_simple, type = \"perc\", index = \"SSC_0\")\n\n\nfit_CDE2_MRR2_full &lt;- glm(\n  formula = fSE_3 ~ SSC_2 + fSE_2 + factor(alc_2) + fiSa_2 + factor(drug_2) + factor(part_2) +\n    SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 + factor(drug_1) + factor(part_1) +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n  data = dat\n)\nboot_CDE2_MRR2_full &lt;- car::Boot(fit_CDE2_MRR2_full, R = 999)\nboot.ci(boot_CDE2_MRR2_full, type = \"perc\", index = \"SSC_2\")\n\nfit_CDE1_MRR2_full &lt;- glm(\n  formula = fSE_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 + factor(drug_1) + factor(part_1) +\n    SSC_2 + \n    SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 + factor(drug_0) + factor(part_0) +\n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = dat\n)\nboot_CDE1_MRR2_full &lt;- car::Boot(fit_CDE1_MRR2_full, R = 999)\nboot.ci(boot_CDE1_MRR2_full, type = \"perc\", index = \"SSC_1\")\n\nfit_CDE0_MRR2_full &lt;- glm(\n  formula = fSE_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 + factor(drug_0) + factor(part_0) +\n    SSC_1 + SSC_2 + \n    age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = dat\n)\nboot_CDE0_MRR2_full &lt;- car::Boot(fit_CDE0_MRR2_full, R = 999)\nboot.ci(boot_CDE0_MRR2_full, type = \"perc\", index = \"SSC_0\")\n\n\n\n\n\nSNMM using G-estimation\nIn total, we fit six SNMMs, namely SNMMs with:\n\nlag-1 relationships, adjusting for no covariates (null set);\nlag-1 relationships, adjusting for the simple covariate adjustment set (simple set);\nlag-1 relationships, adjusting for the full covariate adjustment set (full set);\nlag-1 and lag-2 relationships, adjusting for no covariates (null set, lag-1-2);\nlag-1 and lag-2 relationships, adjusting for the simple covariate adjustment set (simple set, lag-1-2); and\nlag-1 and lag-2 relationships, adjusting for the full covariate adjustment set (full set, lag-1-2).\n\n\nnull setsimple setfull setnull set, lag-1-2simple set, lag-1-2full set, lag-1-2\n\n\n# SNMM with G-estimation (wide-format, null set) ----\nbootstrap_SNMM_null &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1, \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0, \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ SSC_b + fSE_b, \n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() ---- \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + fSE_1 + SSC_1, \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + fSE_0 + fSE_0,\n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + fSE_0,\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot_null &lt;- boot(dat, bootstrap_SNMM_null, R = 999)\nout_boot_null\nboot.ci(out_boot_null, type = \"perc\", index = 3)\n\n\n\n# SNMM with G-estimation (wide-format, simple adjustment set)----\nbootstrap_SNMM_simple &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() ---- \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + \n      fSE_1 + factor(alc_1) + fiSa_1 + SSC_1 +\n       age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + \n      fSE_0 + factor(alc_0) + fiSa_0 + SSC_0 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot_simple &lt;- boot(dat, bootstrap_SNMM_simple, R = 999)\nout_boot_simple\nboot.ci(out_boot_simple, type = \"perc\", index = 3)\n\n\n# SNMM with G-estimation (wide-format, full adjustment set) ----\nbootstrap_SNMM_full &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1 + factor(drug_1) + factor(alc_1) + factor(part_1) + fiSa_1 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0 + factor(drug_0) + factor(alc_0) + factor(part_0) + fiSa_0 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + \n      fSE_1 + factor(alc_1) + factor(drug_1) + factor(part_1) + fiSa_1 + SSC_1 +\n       age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + \n      fSE_0 + factor(alc_0) + factor(drug_0) + factor(part_0) + fiSa_0 + SSC_0 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot_full &lt;- boot(dat, bootstrap_SNMM_full, R = 999)\nout_boot_full\nboot.ci(out_boot_full, type = \"perc\", index = 3)\n\n\n# SNMM with G-estimation (lag-1 and lag-2, null set) ----\nbootstrap_SNMM2_null &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1 + SSC_0 + fSE_0, \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0 + SSC_b + fSE_b, \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ SSC_b + fSE_b,\n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() ---- \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + fSE_1 + SSC_1 + fSE_0 + SSC_0, \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + fSE_0 + SSC_0 + SSC_b + fSE_b, \n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + fSE_b + SSC_b,\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot2_null &lt;- boot(dat, bootstrap_SNMM2_null, R = 999)\nout_boot2_null\nboot.ci(out_boot2_null, type = \"perc\", index = 3)\n\n\n# SNMM with G-estimation (lag-1 and lag-2, simple set) ----\nbootstrap_SNMM2_simple &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1 + factor(alc_1) + fiSa_1 +\n      SSC_0 + fSE_0 + factor(alc_0) + factor(drug_0) + factor(part_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() ---- \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + \n      SSC_1 + factor(alc_1) + fiSa_1 + fSE_1 + \n      SSC_0 + fSE_0 + factor(alc_0) + fiSa_0 +\n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + \n      SSC_0 + factor(alc_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot2_simple &lt;- boot(dat, bootstrap_SNMM2_simple, R = 999)\nout_boot2_simple\nboot.ci(out_boot2_simple, type = \"perc\", index = 3)\n\n\n# SNMM with G-estimation (lag-1 and lag-2, full adjustment set)----\nbootstrap_SNMM2_full &lt;- function(data, i_boot) {\n  \n  # Select bootstrap sample\n  df_boot &lt;- data[i_boot,]\n  \n  # Exposure models\n  fit_PS_SSC2 &lt;- glm(\n    SSC_2 ~ SSC_1 + fSE_1 + factor(drug_1) + factor(alc_1) + factor(part_1) + fiSa_1 +\n      SSC_0 + fSE_0 + factor(alc_0) + factor(drug_0) + factor(part_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n\n  fit_PS_SSC1 &lt;- glm(\n    SSC_1 ~ SSC_0 + fSE_0 + factor(drug_0) + factor(alc_0) + factor(part_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  \n  fit_PS_SSC0 &lt;- glm(\n    SSC_0 ~ age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n    \n  # Calculate predicted exposure\n  df_boot$PS_2 &lt;- predict.glm(fit_PS_SSC2, type = \"response\")\n  df_boot$PS_1 &lt;- predict.glm(fit_PS_SSC1, type = \"response\")\n  df_boot$PS_0 &lt;- predict.glm(fit_PS_SSC0, type = \"response\")\n  \n  # Outcome model using glm() ---- \n  fit_CDE_fSE3 &lt;- glm( \n    formula = fSE_3 ~ PS_2 + SSC_2 + \n      SSC_1 + factor(alc_1) + factor(drug_1) + factor(part_1) + fiSa_1 + fSE_1 + \n      SSC_0 + factor(alc_0) + factor(drug_0) + factor(part_0) + fiSa_0 + fSE_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_2 &lt;- df_boot$fSE_3 - coef(fit_CDE_fSE3)[\"SSC_2\"] * df_boot$SSC_2 \n  \n  fit_CDE_fSE2 &lt;- glm(\n    formula = H_2 ~ PS_1 + SSC_1 + \n      SSC_0 + factor(alc_0) + factor(drug_0) + factor(part_0) + fiSa_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b), \n    data = df_boot\n  )\n  df_boot$H_1 &lt;- df_boot$H_2 - coef(fit_CDE_fSE2)[\"SSC_1\"] * df_boot$SSC_1 \n  \n  fit_CDE_fSE1 &lt;- glm(\n    formula = H_1 ~ PS_0 + SSC_0 + \n      age_b + sex_b + fNe_b + mum_b + dad_b + SSC_b + fSE_b + factor(drug_b) + factor(alc_b) + factor(part_b) + factor(fiSa_b),\n    data = df_boot\n  )\n  \n  df_coefs &lt;- c(\n    CDE0 = coef(fit_CDE_fSE1)[\"SSC_0\"],\n    CDE1 = coef(fit_CDE_fSE2)[\"SSC_1\"],\n    CDE2 = coef(fit_CDE_fSE3)[\"SSC_2\"]\n  )\n  \n  return(df_coefs)\n}\n\n# Perform bootstrap\nset.seed(20240221)\nout_boot2_full &lt;- boot(dat, bootstrap_SNMM2_full, R = 999)\nout_boot2_full\nboot.ci(out_boot2_full, type = \"perc\", index = 3)\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nScherpenzeel, Annette C. 2018. ““True\" Longitudinal and Probability-Based Internet Panels: Evidence from the Netherlands.” In Social and Behavioral Research and the Internet, edited by Marcel Das, Peter Ester, and Lars Kaczmirek, 1st ed., 77–104. Routledge. https://doi.org/10.4324/9780203844922-4.\n\n\nVansteelandt, Stijn, and Arvid Sjolander. 2016. “Revisiting g-Estimation of the Effect of a Time-Varying Exposure Subject to Time-Varying Confounding.” Epidemiologic Methods 5 (1): 37–56. https://doi.org/10.1515/em-2015-0005."
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "Below you can find a list of frequently asked questions, organized by topic, that reach us via email. Click the question to see our response."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Online supplementary materials Mulder, Usami, Hamaker (2024)",
    "section": "",
    "text": "This website is the supplementary materials to “Joint effects in cross-lagged panel research using structural nested mean models” by Mulder, Usami, and Hamaker (2024). It contains:\n\nfully annotated R code for replicating analyses from the empirical example in the main paper;\nfully annotated R code to test if the modeling procedure in R works as intended using simulated data; and\nanswers to Frequently Asked Questions (FAQ) that reach us via email.\n\nUse the top menu to navigate to code for the empirical example, the test code, or the FAQ."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Online supplementary materials Mulder, Usami, Hamaker (2024)",
    "section": "",
    "text": "This website is the supplementary materials to “Joint effects in cross-lagged panel research using structural nested mean models” by Mulder, Usami, and Hamaker (2024). It contains:\n\nfully annotated R code for replicating analyses from the empirical example in the main paper;\nfully annotated R code to test if the modeling procedure in R works as intended using simulated data; and\nanswers to Frequently Asked Questions (FAQ) that reach us via email.\n\nUse the top menu to navigate to code for the empirical example, the test code, or the FAQ."
  },
  {
    "objectID": "index.html#r-packages",
    "href": "index.html#r-packages",
    "title": "Online supplementary materials Mulder, Usami, Hamaker (2024)",
    "section": "R packages",
    "text": "R packages\nFor the analyses, we relied on functions from the following R packages: foreign (version 0.8-83) by R core Team (2022); dplyr (version 1.1.4) by Wickham et al. (2023); tidyr (version 1.3.1) by Wickham, Vaughan, and Girlich (2024); purrr (version 1.0.2) by Wickham and Henry (2023); mice (version 3.16.0) by Buuren and Groothuis-Oudshoorn (2011); ggplot2 (version 3.4.4) by Wickham (2016); lavaan (version 0.6.16) by Rosseel (2012); geeM (version 0.10.1) by McDaniel, Henderson, and Rathouz (2013); and boot (version 1.3-28) by Canty and Ripley (2022). They can be loaded into an R session using the below code:\n\n# Packages: Data \nlibrary(foreign) # Read data stored by SPSS\nlibrary(dplyr) # Data wrangling\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(mice)\n\n# Packages: Visualization\nlibrary(ggplot2)\n\n# Packages: Analyses\nlibrary(lavaan) # Structural equation modeling\nlibrary(geeM) # GEE\nlibrary(boot) # Bootstrap"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Simulation",
    "section": "",
    "text": "Below we simulate data from the vector autoregressive model (VAR) of order-1 as illustrated in Figure 1 of the main manuscript. This data is used to double check if the CLPM in SEM, the repeated multiple regression method, and the SNMM with G-estimation method were correctly implemented in the R code. Furthermore, the simulations were used to assess the sensitivity of model results to different sufficient adjustment sets.\n\n\n\n\n\n\nNote\n\n\n\nThese simulations were not mentioned in the main paper, and mainly served as a check for the authors. However, we do include them in the supplementary materials, as readers main find it useful to use these simulation for obtaining some intuition of the methods.\n\n\n\nData generating mechanism\nData are generated from a the vector autoregressive model (VAR) of order-1 as illustrated in Figure 1 of the main manuscript. The relationships between variables are described by polynomials of degree \\(k\\), and the residuals are normally distributed. Baseline covariates \\(C\\) are binomial random variables.\nPopulation parameter values for the separate relationships can be found in the R code below. For a linear data generating mechanism (\\(k = 1\\)), the population parameter values of the controlled direct effect (CDE) of \\(X_{0} \\rightarrow Y_{3}\\) is 0.05; the CDE of \\(X_{1} \\rightarrow Y_{3}\\) is 0.1; and the CDE of \\(X_{2} \\rightarrow Y_{3}\\) is 0.2.\nsimulate_data_test &lt;- function(n) {\n  # Simulation factors\n  kth_bX &lt;- 0\n  kth_bY &lt;- 0\n  \n  # Baseline variables\n  C1_b &lt;- rbinom(n, 1, .5)\n  C2_b &lt;- rbinom(n, 1, .1)\n  C3_b &lt;-rbinom(n, 1, .4)\n    \n  Y_b &lt;- rnorm(n, 5, .5)\n  X_b &lt;- rnorm(n, 5, .5)\n  \n  # Stationary process\n  Y_0 &lt;- 3 + 0.5 * Y_b + 0.2 * X_b + 0.5 * C1_b +\n    0.5 * I((Y_b - mean(Y_b))^kth_bY) + 1 * I((X_b - mean(X_b))^kth_bX) + rnorm(n, sd = .5)\n  X_0 &lt;- 3 + 0.2 * Y_b + 0.5 * X_b + 0.5 * C1_b + rnorm(n, sd = .5) \n  \n  Y_1 &lt;- 3 + 0.5 * Y_0 + 0.2 * X_0 + 0.5 * C1_b +\n    0.5 * I((Y_0 - mean(Y_0))^kth_bY) + 1 * I((X_0 - mean(X_0))^kth_bX) + rnorm(n, sd = .5)\n  X_1 &lt;- 3 + 0.2 * Y_0 + 0.5 * X_0 + 0.5 * C1_b + rnorm(n, sd = .5) \n  \n  Y_2 &lt;- 3 + 0.5 * Y_1 + 0.2 * X_1 + 0.5 * C1_b +\n    0.5 * I((Y_1 - mean(Y_1))^kth_bY) + 1 * I((X_1 - mean(X_1))^kth_bX) + rnorm(n, sd = .5)\n  X_2 &lt;- 3 + 0.2 * Y_1 + 0.5 * X_1 + 0.5 * C1_b + rnorm(n, sd = .5) \n  \n  Y_3 &lt;- 3 + 0.5 * Y_2 + 0.2 * X_2 + 0.5 * C1_b +\n    0.5 * I((Y_2 - mean(Y_2))^kth_bY) + 1 * I((X_2 - mean(X_2))^kth_bX) + rnorm(n, sd = .5)\n  X_3 &lt;- 3 + 0.2 * Y_2 + 0.5 * X_2 + 0.5 * C1_b + rnorm(n, sd = .5) \n  \n  plot(Y_0, X_1)\n  plot(X_1, X_2)\n  \n  dat_test &lt;- data.frame(\n    C1_b, C2_b, C3_b, X_b, Y_b,\n    X_0, Y_0,\n    X_1, Y_1, \n    X_2, Y_2,\n    X_3, Y_3\n  )\n  \n  return(dat_test)\n}\n\n\nCross-lagged panel modeling using SEM\nm_CLPM_test &lt;- '\n  # Estimate lagged effects\n  X_1 ~ X_0 + Y_0 + C1_b\n  Y_1 ~ Y_0 + b_y1x0*X_0 + C1_b\n  \n  X_2 ~ X_1 + Y_1 + C1_b\n  Y_2 ~ b_y2x1*X_1 + b_y2y1*Y_1 + C1_b\n   \n  X_3 ~ X_2 + Y_2 + C1_b\n  Y_3 ~ b_y3x2*X_2 + b_y3y2*Y_2 + C1_b\n\n  # Estimate (co)variance at first wave\n  X_0 ~~ X_0\n  Y_0 ~~ Y_0\n  X_0 ~~ Y_0\n  \n  # Estimate residual (co)variances \n  X_1 ~~ X_1\n  Y_1 ~~ Y_1\n  X_1 ~~ Y_1\n  \n  X_2 ~~ X_2\n  Y_2 ~~ Y_2\n  X_2 ~~ Y_2\n  \n  X_3 ~~ X_3\n  Y_3 ~~ Y_3\n  X_3 ~~ Y_3\n  \n  # Define joint effects\n  CDE_0 := b_y1x0 * b_y2y1 * b_y3y2 \n  CDE_1 := b_y2x1 * b_y3y2\n  CDE_2 := b_y3x2\n'\n\nfit_CLPM_test &lt;- lavaan(\n  model = m_CLPM_test,\n  data = dat_test, \n  missing = \"ML\", \n  meanstructure = TRUE, \n  int.ov.free = TRUE,\n  orthogonal.x = FALSE,\n  se = \"bootstrap\", \n  bootstrap = 99,\n  parallel = \"snow\", \n  ncpus = 7\n)\nsummary(fit_CLPM_test)\nparameterEstimates(fit_CLPM_test, boot.ci.type = \"perc\")\n\n\nRepeated multiple regression\n# Test multiple regression method with L_{t} in adjustment set----\nn_replications &lt;- 500\n\nout_test_MR_Lt &lt;- matrix(NA, nrow = n_replications, ncol = 3)\ncolnames(out_test_MR_Lt) &lt;- c(\"CDE0\", \"CDE1\", \"CDE2\")\n\nfor(i in 1:n_replications) {\n  dat_test &lt;- simulate_data_test(1000)\n  \n  fit_CDE2_test_Lt &lt;- glm(Y_3 ~ X_2 + Y_2 + C1_b, data = dat_test)\n  fit_CDE1_test_Lt &lt;- glm(Y_3 ~ X_1 + Y_1 + C1_b + X_2, data = dat_test)\n  fit_CDE0_test_Lt &lt;- glm(Y_3 ~ X_0 + Y_0 + C1_b + X_1 + X_2, data = dat_test)\n  \n  out_test_MR_Lt[i, \"CDE0\"] &lt;- coef(fit_CDE0_test_Lt)[\"X_0\"]\n  out_test_MR_Lt[i, \"CDE1\"] &lt;- coef(fit_CDE1_test_Lt)[\"X_1\"]\n  out_test_MR_Lt[i, \"CDE2\"] &lt;- coef(fit_CDE2_test_Lt)[\"X_2\"]\n}\n\ncolMeans(out_test_MR_Lt) \n\n# Test multiple regression method with L_{t - 1} in adjustment set----\nout_test_MR_Ltmin1 &lt;- matrix(NA, nrow = n_replications, ncol = 3)\ncolnames(out_test_MR_Ltmin1) &lt;- c(\"CDE0\", \"CDE1\", \"CDE2\")\n\nfor(i in 1:n_replications) {\n  dat_test &lt;- simulate_data_test(1000)\n  \n  fit_CDE2_test_Ltmin1 &lt;- glm(Y_3 ~ X_2 + X_1 + Y_1 + C1_b, data = dat_test)\n  fit_CDE1_test_Ltmin1 &lt;- glm(Y_3 ~ X_1 + X_0 + Y_0 + C1_b + X_2, data = dat_test)\n  fit_CDE0_test_Ltmin1 &lt;- glm(Y_3 ~ X_0 + C1_b + X_1 + X_2, data = dat_test)\n  \n  out_test_MR_Ltmin1[i, \"CDE0\"] &lt;- coef(fit_CDE0_test_Ltmin1)[\"X_0\"]\n  out_test_MR_Ltmin1[i, \"CDE1\"] &lt;- coef(fit_CDE1_test_Ltmin1)[\"X_1\"]\n  out_test_MR_Ltmin1[i, \"CDE2\"] &lt;- coef(fit_CDE2_test_Ltmin1)[\"X_2\"]\n}\n\ncolMeans(out_test_MR_Ltmin1) \n\n\nSNMM using G-estimation\n# Test G-estimation with L_{t} in adjustment set----\nout_test_Gest_Lt &lt;- matrix(NA, nrow = n_replications, ncol = 3)\ncolnames(out_test_Gest_Lt) &lt;- c(\"CDE0\", \"CDE1\", \"CDE2\")\n\nfor(i in 1:n_replications) {\n  \n  # Generate data\n  dat_test &lt;- simulate_data_test(1000)\n  \n  # Exposure models with Lag0 covariates\n  fit_PS_X2 &lt;- glm(X_2 ~ Y_2 + C1_b, data = dat_test)\n  fit_PS_X1 &lt;- glm(X_1 ~ Y_1 + C1_b, data = dat_test)\n  fit_PS_X0 &lt;- glm(X_0 ~ Y_0 + C1_b, data = dat_test)\n  \n  # Calculate predicted exposure\n  dat_test$PS2 &lt;- predict.glm(fit_PS_X2, type = \"response\")\n  dat_test$PS1 &lt;- predict.glm(fit_PS_X1, type = \"response\")\n  dat_test$PS0 &lt;- predict.glm(fit_PS_X0, type = \"response\")\n  \n  # Outcome models\n  fit_CDE2 &lt;- glm(Y_3 ~ X_2 + Y_2 + C1_b + PS2, data = dat_test)\n  dat_test$H2 &lt;- dat_test$Y_3 - coef(fit_CDE2)[\"X_2\"] * dat_test$X_2 # Create blipped-down version Y\n  \n  fit_CDE1 &lt;- glm(H2 ~ X_1 + Y_1 + C1_b + PS1, data = dat_test)\n  dat_test$H1 &lt;- dat_test$H2 - coef(fit_CDE1)[\"X_1\"] * dat_test$X_1 # Create blipped-down version Y\n  \n  fit_CDE0 &lt;- glm(H1 ~ X_0 + Y_0 + C1_b + PS0, data = dat_test)\n                    \n  out_test_Gest_Lt[i, \"CDE0\"] &lt;- coef(fit_CDE0)[\"X_0\"]\n  out_test_Gest_Lt[i, \"CDE1\"] &lt;- coef(fit_CDE1)[\"X_1\"]\n  out_test_Gest_Lt[i, \"CDE2\"] &lt;- coef(fit_CDE2)[\"X_2\"]\n}\n\ncolMeans(out_test_Gest_Lt)\n\n# Test G-estimation with L_{t - 1} in adjustment set----\nout_test_Gest_Ltmin1 &lt;- matrix(NA, nrow = n_replications, ncol = 3)\ncolnames(out_test_Gest_Ltmin1) &lt;- c(\"CDE0\", \"CDE1\", \"CDE2\")\n\nfor(i in 1:n_replications) {\n  \n  # Generate data\n  dat_test &lt;- simulate_data_test(1000)\n  \n  # Exposure models with Lag1 covariates\n  fit_PS_X2 &lt;- glm(X_2 ~ X_1 + Y_1 + C1_b, data = dat_test )\n  fit_PS_X1 &lt;- glm(X_1 ~ X_0 + Y_0 + C1_b, data = dat_test )\n  fit_PS_X0 &lt;- glm(X_0 ~ C1_b, data = dat_test)\n  \n  # Calculate predicted exposure\n  dat_test$PS2 &lt;- predict.glm(fit_PS_X2, type = \"response\")\n  dat_test$PS1 &lt;- predict.glm(fit_PS_X1, type = \"response\")\n  dat_test$PS0 &lt;- predict.glm(fit_PS_X0, type = \"response\")\n  \n  # Outcome models\n  fit_CDE2 &lt;- glm(Y_3 ~ X_2 + X_1 + Y_1 + C1_b + PS2, data = dat_test)\n  dat_test$H2 &lt;- dat_test$Y_3 - coef(fit_CDE2)[\"X_2\"] * dat_test$X_2 # Create blipped-down version Y\n  \n  fit_CDE1 &lt;- glm(H2 ~ X_1 + X_0 + Y_0 + C1_b + PS1, data = dat_test)\n  dat_test$H1 &lt;- dat_test$H2 - coef(fit_CDE1)[\"X_1\"] * dat_test$X_1 # Create blipped-down version Y\n  \n  fit_CDE0 &lt;- glm(H1 ~ X_0 + C1_b + PS0, data = dat_test)\n                    \n  out_test_Gest_Ltmin1[i, \"CDE0\"] &lt;- coef(fit_CDE0)[\"X_0\"]\n  out_test_Gest_Ltmin1[i, \"CDE1\"] &lt;- coef(fit_CDE1)[\"X_1\"]\n  out_test_Gest_Ltmin1[i, \"CDE2\"] &lt;- coef(fit_CDE2)[\"X_2\"]\n}\n\ncolMeans(out_test_Gest_Ltmin1)"
  }
]